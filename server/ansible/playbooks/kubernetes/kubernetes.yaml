---
- hosts:
    - localhost
  tasks:
    - name: Set k3s node address
      ansible.builtin.set_fact:
        master_node_ip_address: "{{ hostvars['master']['ansible_host'] }}"

    - name: Copy over k3s config for kubectl
      ansible.builtin.command: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null rancher@{{ master_node_ip_address }}:/etc/rancher/k3s/k3s.yaml ~/.kube

    - name: Rename k3s config
      ansible.builtin.command: mv ~/.kube/k3s.yaml ~/.kube/config

    - name: Replace localhost in k3s config with node address
      ansible.builtin.replace:
        path: ~/.kube/config
        regexp: '127\.0\.0\.1'
        replace: "{{ master_node_ip_address }}"

    - name: Set k3s config file permissions
      ansible.builtin.file:
        path: ~/.kube/config
        mode: "644"

    - name: Wait to allow k3s node to have a chance to come online
      ansible.builtin.wait_for:
        timeout: 10

    - name: Enable k3os auto updates
      ansible.builtin.command: kubectl label node k3os-master k3os.io/upgrade=enabled

    - name: Allow node to manage USB devices
      ansible.builtin.command: kubectl label node k3os-master smarter-device-manager=enabled

    - name: Create flux-system namespace
      ansible.builtin.shell: kubectl create namespace flux-system --dry-run=client -o yaml | kubectl apply -f -

    - name: Add GPG key secret
      ansible.builtin.shell: gpg --export-secret-keys --armor "{{ key_fp }}" |
        kubectl create secret generic sops-gpg --namespace=flux-system --from-file=sops.asc=/dev/stdin

    - name: Bootstrap cluster components (fails the first time due to race conditions with the Flux CRDs)
      ansible.builtin.command: kubectl apply --kustomize={{ repo_dir }}/cluster/base/flux-system
      ignore_errors: true

    - name: Finish bootstrapping cluster components
      ansible.builtin.command: kubectl apply --kustomize={{ repo_dir }}/cluster/base/flux-system
